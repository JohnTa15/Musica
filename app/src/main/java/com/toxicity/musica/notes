//        searchdir.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View view) {
//                openFilePicker();
//            }
//        });
//
//        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
//            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, PERMISSION_REQUEST_CODE);
//        } else {
//            fetchAudioFiles();
//        }
//    }

    private void openFilePicker() { //forcing user to choose only mp3 file
        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
        intent.setType("audio/*");
        startActivityForResult(intent, PICK_AUDIO_FILE_REQUEST);
    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if(requestCode == PICK_AUDIO_FILE_REQUEST && resultCode == RESULT_OK && data != null) {
            Uri audioUri = data.getData();
            String selectedFolderPath = audioUri.getPath();

            FilesList.clear();
            File selectedFolder = new File(selectedFolderPath);
            File[] files = selectedFolder.listFiles();

            if (files != null) {
                for (File file : files) {
                    if (file.isFile() && isAudioFile(file.getName())) {
                        FilesList.add(file.getName());
                    }
                }
            }

            ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, FilesList);
            SongsListView.setAdapter(adapter);
        }
    }

    private void fetchAudioFiles() {
        progressBar.setVisibility(View.VISIBLE);

        File dir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
        File[] files = dir.listFiles();

        if (files != null) {
            for (File file : files) {
                if (file.isFile() && isAudioFile(file.getName())) {
                    FilesList.add(file.getName());
                    Log.d("DEBUG", "Added audio file: " + file.getName());
                }
            }
        }

        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, FilesList);
        SongsListView.setAdapter(adapter);

        progressBar.setVisibility(View.GONE);
    }


    private boolean isAudioFile(String fileName) { //we want to make sure that those are the specific extensions that we want to insert
        String[] audioExtensions = {".mp3", ".wav", ".aac", ".ogg", ".flac"};

        for (String extension : audioExtensions) {
            if (fileName.toLowerCase().endsWith(extension)) {
                return true;
            }
        }
        return false;
    }
}